#####################################################################
#   Macros
#####################################################################

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

[gcode_macro ZCALIBRATE]
gcode:
    Z_ENDSTOP_CALIBRATE

[gcode_macro SAVE_CALIBRATION]
gcode:
    ACCEPT
    SAVE_CONFIG

[gcode_macro create_mesh]
gcode:
    BED_MESH_CALIBRATE

[gcode_macro Down1]
gcode:
    TESTZ Z=-1

[gcode_macro DownPoint1]
gcode:
    TESTZ Z=-.1

[gcode_macro Up1]
gcode:
    TESTZ Z=1

[gcode_macro UpPoint1]
gcode:
    TESTZ Z=.1

[gcode_macro PREHEAT]
gcode:
  #--------------------------------------------------------------------
  M106 S255 #set parts fan to full speed, helps circulate chamber air
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110 #For ABS  

  
  ## Move hotend a sufficent distance from heated bed for heat soak
  #--------------------------------------------------------------------
  #G0 X125 Y125 Z50 F3600 ## Uncomment for 250mm build
  #G0 X150 Y150 Z50 F3600 ## Uncomment for 300mm build
  G90 #set absolute positioning
  G28 #home all axis
  G0 X175 Y175 Z50 F3600 ## Uncomment for 350mm build
  
[gcode_macro PURGE_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PURGE_NOZZLE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 Y3 X3 F18000
    G1 Z0.2 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X100 E5 F1000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
    G1 Y-2 F1000
    G1 X-60 E9 F1000    ; Print second part of the line.
    G1 E-0.5 F3000      ; Retract to avoid stringing.
    G1 X0.5 E0 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    RESTORE_GCODE_STATE NAME=PURGE_NOZZLE_STATE


[gcode_macro G32]
gcode:
    # SAVE_GCODE_STATE NAME=STATE_G32
    
    G28
    QUAD_GANTRY_LEVEL
    
    # G28 Z
    # AUTOZ
    
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    # G90                            ; absolute positioning

    # G0 X175 Y175 Z30 F3600
    CENTER
    #--------------------------------------------------------------------
    # RESTORE_GCODE_STATE NAME=STATE_G32




[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G90                            ; absolute positioning    
    # Start bed heating
    {% set BED_TEMP = params.BED|default(60)|float %}
    {% set EXTRUDER_TEMP = params.HOTEND|default(200)|float %}
    
    # Wait for bed to reach temperature
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}    ; set bed temp
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP}         ; wait for bed temp         

    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160        ; set extruder temp to 160 for QGL w/o oozing

    BED_MESH_CLEAR
        
    G32                            ; home all axes with macro
    G1 Z20 F3000                   ; move nozzle away from bed

    # Set and wait for nozzle to reach temperature
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}   

    CLEAN_NOZZLE
    G28 Z
    AUTOZ

    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160        ; set extruder temp to 160 for QGL w/o oozing
    #BED_MESH_PROFILE LOAD=default
    BED_MESH_CALIBRATE

    CENTER

    # Set and wait for nozzle to reach temperature
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}   

    PURGE_NOZZLE
    

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro FORCE_UP1]
gcode:
    # FORCE_MOVE STEPPER=stepper_z DISTANCE=1 VELOCITY=10
    # FORCE_MOVE STEPPER=stepper_z1 DISTANCE=1 VELOCITY=10
    # FORCE_MOVE STEPPER=stepper_z2 DISTANCE=1 VELOCITY=10
    # FORCE_MOVE STEPPER=stepper_z3 DISTANCE=1 VELOCITY=10
    SET_KINEMATIC_POSITION X=175 Y=175 Z=0
    G0 Z1

[gcode_macro CENTER]
gcode:
    {% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
    {% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
    G90
    G0 X{Mx * 0.5} Y{My * 0.5} Z5 F20000

[gcode_macro AUTOZ]
gcode:
    CALIBRATE_Z

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 300
variable_start_y: 356
variable_start_z: 5.5
variable_wipe_dist: -45
variable_wipe_qty: 5
variable_wipe_spd: 200
variable_raise_distance: 30

gcode:
     {% if "xyz" not in printer.toolhead.homed_axes %}
     G28
     {% endif %}
 
     G90                                            ; absolute positioning
     ## Move nozzle to start position
     G1 X{start_x} Y{start_y} F6000
     G1 Z{start_z} F1500

     ## Wipe nozzle
     {% for wipes in range(1, (wipe_qty + 1)) %}
       G1 X{start_x + wipe_dist} F{wipe_spd * 60}
       G1 X{start_x} F{wipe_spd * 60}
     {% endfor %}

     ## Raise nozzle
     G1 Z{raise_distance}

